import { useState } from "react";
import { motion } from "framer-motion";

const TimeFrameConverter = () => {
  const [time, setTime] = useState(1); // Tiempo en segundos
  const [frames, setFrames] = useState(24); // Frames por defecto
  const [fps, setFps] = useState(24); // FPS por defecto

  // FunciÃ³n para formatear el tiempo a hh:mm:ss
  const formatTime = (totalSeconds: number) => {
    const hours = Math.floor(totalSeconds / 3600);
    const minutes = Math.floor((totalSeconds % 3600) / 60);
    const seconds = Math.floor(totalSeconds % 60);
    return `${String(hours).padStart(2, "0")}:${String(minutes).padStart(2, "0")}:${String(seconds).padStart(2, "0")}`;
  };

  // Convertir tiempo a frames
  const handleTimeChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newTime = parseFloat(e.target.value);
    setTime(newTime);
    setFrames(Math.round(newTime * fps));
  };

  // Convertir frames a tiempo
  const handleFramesChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const newFrames = parseInt(e.target.value);
    setFrames(newFrames);
    setTime(newFrames / fps);
  };

  // Cambiar FPS y recalcular
  const handleFpsChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    const newFps = parseInt(e.target.value);
    setFps(newFps);
    setFrames(Math.round(time * newFps));
  };

  return (
    <motion.div
      initial={{ opacity: 0, y: -20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="converter"
      style={{ padding: "20px", maxWidth: "300px", margin: "auto" }}
    >
      <h2>Convertidor de Tiempo y Frames</h2>
      
      <label>FPS:</label>
      <select value={fps} onChange={handleFpsChange}>
        {[24, 25, 30, 48, 60].map((fpsOption) => (
          <option key={fpsOption} value={fpsOption}>
            {fpsOption}
          </option>
        ))}
      </select>

      <label>Tiempo (hh:mm:ss):</label>
      <input
        type="number"
        value={time}
        onChange={handleTimeChange}
        step="0.01"
      />

      <label>Frames:</label>
      <input
        type="number"
        value={frames}
        onChange={handleFramesChange}
      />

      <motion.p
        animate={{ scale: [1, 1.1, 1] }}
        transition={{ duration: 0.3, repeat: Infinity, repeatType: "reverse" }}
      >
        {formatTime(time)} = {frames} frames @ {fps} FPS
      </motion.p>
    </motion.div>
  );
};

export default TimeFrameConverter;

